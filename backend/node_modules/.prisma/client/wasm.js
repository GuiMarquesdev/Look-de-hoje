
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.18.0
 * Query Engine version: 34b5a692b7bd79939a9a2c3ef97d816e749cda2f
 */
Prisma.prismaVersion = {
  client: "6.18.0",
  engine: "34b5a692b7bd79939a9a2c3ef97d816e749cda2f"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.CategoryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  is_active: 'is_active',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.PieceScalarFieldEnum = {
  id: 'id',
  name: 'name',
  category_id: 'category_id',
  status: 'status',
  image_url: 'image_url',
  images: 'images',
  image_position_x: 'image_position_x',
  image_position_y: 'image_position_y',
  image_zoom: 'image_zoom',
  description: 'description',
  measurements: 'measurements',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.StoreSettingScalarFieldEnum = {
  id: 'id',
  store_name: 'store_name',
  instagram_url: 'instagram_url',
  whatsapp_url: 'whatsapp_url',
  email: 'email',
  admin_password: 'admin_password',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.HeroSettingScalarFieldEnum = {
  id: 'id',
  slides: 'slides',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.CategoryOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.PieceOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  category_id: 'category_id',
  status: 'status',
  image_url: 'image_url',
  description: 'description'
};

exports.Prisma.StoreSettingOrderByRelevanceFieldEnum = {
  id: 'id',
  store_name: 'store_name',
  instagram_url: 'instagram_url',
  whatsapp_url: 'whatsapp_url',
  email: 'email',
  admin_password: 'admin_password'
};

exports.Prisma.HeroSettingOrderByRelevanceFieldEnum = {
  id: 'id'
};


exports.Prisma.ModelName = {
  Category: 'Category',
  Piece: 'Piece',
  StoreSetting: 'StoreSetting',
  HeroSetting: 'HeroSetting'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\Guilherme\\Desktop\\Look-de-hoje\\backend\\node_modules\\@prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\Guilherme\\Desktop\\Look-de-hoje\\backend\\prisma\\schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.18.0",
  "engineVersion": "34b5a692b7bd79939a9a2c3ef97d816e749cda2f",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "mysql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "datasource db {\n  provider = \"mysql\"\n  url      = env(\"DATABASE_URL\")\n}\n\ngenerator client {\n  provider = \"prisma-client-js\"\n}\n\nmodel Category {\n  id         String   @id @default(cuid()) @map(\"id\")\n  name       String   @unique\n  slug       String   @unique\n  is_active  Boolean  @default(true)\n  created_at DateTime @default(now()) @map(\"created_at\")\n  updated_at DateTime @updatedAt @map(\"updated_at\")\n\n  pieces Piece[]\n\n  @@map(\"categories\")\n}\n\nmodel Piece {\n  id               String   @id @default(cuid()) @map(\"id\")\n  name             String\n  category_id      String   @map(\"category_id\")\n  status           String   @default(\"available\")\n  image_url        String?  @map(\"image_url\")\n  images           Json?\n  image_position_x Float?   @default(50) @map(\"image_position_x\")\n  image_position_y Float?   @default(50) @map(\"image_position_y\")\n  image_zoom       Float?   @default(100) @map(\"image_zoom\")\n  description      String?\n  measurements     Json?\n  created_at       DateTime @default(now()) @map(\"created_at\")\n  updated_at       DateTime @updatedAt @map(\"updated_at\")\n\n  category Category @relation(fields: [category_id], references: [id], onDelete: Cascade)\n\n  @@map(\"pieces\")\n}\n\nmodel StoreSetting {\n  id             String   @id @default(cuid()) @map(\"id\")\n  store_name     String?  @default(\"LooksdeHoje\") @map(\"store_name\")\n  instagram_url  String?  @map(\"instagram_url\")\n  whatsapp_url   String?  @map(\"whatsapp_url\")\n  email          String?\n  admin_password String   @map(\"admin_password\")\n  created_at     DateTime @default(now()) @map(\"created_at\")\n  updated_at     DateTime @updatedAt @map(\"updated_at\")\n\n  @@map(\"store_settings\")\n}\n\nmodel HeroSetting {\n  id         String   @id @default(uuid()) @map(\"id\")\n  slides     Json? // Tipo JSON para armazenar os slides\n  created_at DateTime @default(now()) @map(\"created_at\")\n  updated_at DateTime @updatedAt @map(\"updated_at\")\n\n  @@map(\"hero_settings\")\n}\n",
  "inlineSchemaHash": "a901ece318788bd3e9c08f61e046f985a176571da6f57dba76e95fb52bbd9f3f",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Category\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"id\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"is_active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"pieces\",\"kind\":\"object\",\"type\":\"Piece\",\"relationName\":\"CategoryToPiece\"}],\"dbName\":\"categories\"},\"Piece\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"id\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category_id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"category_id\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"image_url\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"image_url\"},{\"name\":\"images\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"image_position_x\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"image_position_x\"},{\"name\":\"image_position_y\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"image_position_y\"},{\"name\":\"image_zoom\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"image_zoom\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"measurements\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"CategoryToPiece\"}],\"dbName\":\"pieces\"},\"StoreSetting\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"id\"},{\"name\":\"store_name\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"store_name\"},{\"name\":\"instagram_url\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"instagram_url\"},{\"name\":\"whatsapp_url\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"whatsapp_url\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"admin_password\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"admin_password\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"}],\"dbName\":\"store_settings\"},\"HeroSetting\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"id\"},{\"name\":\"slides\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"}],\"dbName\":\"hero_settings\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

